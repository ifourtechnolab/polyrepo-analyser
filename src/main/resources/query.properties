saveUserQuery=INSERT INTO user (user_name, email, bearer_token, password) VALUES(?,?,?,?)
#findByEmailAndPasswordQuery=SELECT user.id,user.bearer_token FROM user where user.email='%1$s' && user.password='%2$s'
findByEmailAndPasswordQuery=SELECT id,bearer_token,user_name FROM user where email=? && password=?
updateBearerTokenQuery=UPDATE user SET bearer_token=? WHERE id=?;

#saveQuery
saveStoredQuery=INSERT INTO stored_queries (title, query, user_id) VALUES(?,?,?)

#parameterQuery
saveParameterQuery=INSERT INTO parameter (param_name, param_value, q_id) VALUES (?,?,?)

#storedRepo
saveStoredRepoQuery=INSERT INTO stored_repository_names (name, q_id) VALUES (?,?)

#fetchStoredQueryJoin
fetchStoredQueryJoinQuery=SELECT q.q_id,q.title,q.query,p.param_name,p.param_value,r.name from stored_queries as q LEFT JOIN parameter as p ON q.q_id=p.q_id LEFT JOIN stored_repository_names as r ON q.q_id=r.q_id WHERE q.user_id=?

#delete parameter and repo names query
deletePramRepoQuery=DELETE parameter,stored_repository_names FROM parameter INNER JOIN stored_repository_names ON parameter.q_id = stored_repository_names.q_id WHERE parameter.q_id=?

#delete stored query
deleteStoredQuery=DELETE FROM stored_queries WHERE q_id = ?

#check number of queries trend captured of a user
getNoOfTrendCapturedQueries=select count(*) from stored_queries where is_trend_captured=true and user_id=?

#set trend capture for query
setTrendCaptureQuery=update stored_queries set is_trend_captured=true where q_id=?

#get list of trend captured queries
fetchListOfTrendCapturedQueries=select q_id,title,query,if(is_trend_captured,'true','false')is_trend_captured from stored_queries where is_trend_captured=true and user_id=?

#unset trend capture for query
unsetTrendCaptureQuery=update stored_queries set is_trend_captured=false where q_id=?

#get list of all trend captured queries with parameters,repoNames and token
getListOfAllTrendCapturedQueriesQuery=SELECT q.q_id,q.title,q.query,p.param_name,p.param_value,r.name,u.bearer_token from stored_queries as q LEFT JOIN parameter as p ON q.q_id=p.q_id LEFT JOIN user as u ON u.user_id=q.user_id LEFT JOIN stored_repository_names as r ON q.q_id=r.q_id WHERE q.is_trend_captured=true;

#save trend result
saveTrendResultQuery=INSERT INTO trend_capture(`date`,`result`,`q_id`)VALUES(?,?,?)

#get trend result for a particular user
getTrendResultsQuery=select t.* from trend_capture as t, stored_queries as q where t.q_id=q.q_id and q.user_id=?

#get list of trend ids of specific query
getListOfTrendCapturedByQueryIdQuery=select t_id from trend_capture where q_id=?

#delete trend by trend id
deleteTrendByTrendIdQuery=delete from trend_capture where t_id=?